{"version":3,"sources":["components/Card.js","components/CardList.js","components/Alert.js","components/Form.js","requests/GithubRequest.js","App.js","index.js"],"names":["Card","profile","props","score","public_repos","followers","deleteCard","className","href","this","html_url","src","avatar_url","alt","name","company","bio","onClick","login","Component","CardList","deleteProfile","userName","profiles","map","key","id","Alert","style","error","opacity","Form","state","addNewProfile","cookies","Cookies","handleSubmit","event","a","preventDefault","setState","currentAccounts","get","newAccounts","set","handleError","handleChange","target","value","onSubmit","type","placeholder","onChange","required","GithubRequest","username","githubRequest","Request","fetch","then","response","ok","json","App","prevState","initializeProfiles","accounts","split","account","filter","filteredAccounts","join","exact","path","render","routerProps","React","ReactDOM","basename","process","StrictMode","document","getElementById"],"mappings":"sUAuBeA,G,wNApBbC,QAAU,EAAKC,M,EACfC,MAAoC,GAA5B,EAAKF,QAAQG,aAA4C,EAAxB,EAAKH,QAAQI,U,EACtDC,WAAa,EAAKJ,MAAMI,W,uDAEd,IAAD,OACP,OACE,yBAAKC,UAAU,QACb,uBAAGC,KAAMC,KAAKR,QAAQS,UAAU,yBAAKC,IAAKF,KAAKR,QAAQW,WAAYC,IAAI,YACvE,yBAAKN,UAAU,cACb,yBAAKA,UAAU,cAAcE,KAAKR,QAAQa,MAC1C,yBAAKP,UAAU,iBAAiBE,KAAKR,QAAQc,SAC7C,yBAAKR,UAAU,aAAaE,KAAKR,QAAQe,MAE3C,yBAAKT,UAAU,eAAeE,KAAKN,OACnC,yBAAKI,UAAU,eAAeU,QAAU,kBAAM,EAAKX,WAAW,EAAKL,QAAQiB,SAA3E,U,GAfWC,cCiBJC,E,4MAfbC,cAAgB,EAAKnB,MAAMmB,c,EAE3Bf,WAAa,SAACgB,GACZ,EAAKpB,MAAMmB,cAAcC,I,uDAGjB,IAAD,OACP,OACE,yBAAKf,UAAU,aACZE,KAAKP,MAAMqB,SAASC,KAAI,SAAAvB,GAAO,OAAI,kBAAC,EAAD,eAAMwB,IAAKxB,EAAQyB,GAAIpB,WAAY,EAAKA,YAAgBL,Y,GAV7EkB,aCSRQ,E,uKARX,OACE,yBAAKpB,UAAU,QAAQqB,MAAOnB,KAAKP,MAAM2B,MAAQ,CAAEC,QAAS,GAAM,CAAEA,QAAS,IAC3E,uBAAGvB,UAAU,8BADf,IACiDE,KAAKP,MAAMoB,SAD5D,+B,GAHcH,a,QC+CLY,E,4MA5CbC,MAAQ,CAAEV,SAAU,GAAIO,OAAO,G,EAC/BI,cAAgB,EAAK/B,MAAM+B,c,EAC3BC,QAAU,IAAIC,I,EAEdC,a,uCAAe,WAAOC,GAAP,mBAAAC,EAAA,6DACbD,EAAME,iBADO,SAES,EAAKN,cAAc,EAAKD,MAAMV,UAFvC,QAEPrB,EAFO,SAIX,EAAKuC,SAAS,CAAElB,SAAU,GAAIO,OAAO,IACjCY,EAAkB,EAAKP,QAAQQ,IAAI,YACnCC,EAAcF,EAAkBA,EAAe,WAAOxC,EAAQiB,OAAUjB,EAAQiB,MACpF,EAAKgB,QAAQU,IAAI,WAAYD,IAE7B,EAAKE,cATM,2C,wDAafC,aAAe,SAACT,GACd,EAAKG,SAAS,CAAElB,SAAUe,EAAMU,OAAOC,MAAOnB,OAAO,K,EAGvDgB,YAAc,WACZ,EAAKL,SAAS,CAAElB,SAAU,EAAKU,MAAMV,SAAUO,OAAO,K,uDAItD,OACE,yBAAKtB,UAAU,QACb,0BAAM0C,SAAUxC,KAAK2B,cACnB,2BACEc,KAAK,OACLC,YAAY,kBACZH,MAAOvC,KAAKuB,MAAMV,SAClB8B,SAAU3C,KAAKqC,aACfO,UAAQ,IAEV,gCAAQ,uBAAG9C,UAAU,iBACrB,kBAAC,EAAD,CAAOe,SAAUb,KAAKuB,MAAMV,SAAUO,MAAOpB,KAAKuB,MAAMH,c,GAtC/CV,aCUJmC,EAZO,SAACC,GACrB,IAAIC,EAAgB,IAAIC,QAAJ,UAHG,iCAGH,OAAkCF,IAEtD,OACEG,MAAMF,GACHG,MAAK,SAACC,GACL,QAAKA,EAASC,IACPD,EAASE,WC2DTC,E,kDAzDb,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDgC,QAAU,IAAIC,IACnB,EAAKH,MAAQ,CAAET,SAAU,IAEzB,EAAKU,cAAL,uCAAqB,WAAOX,GAAP,eAAAgB,EAAA,sEACGgB,EAAchC,GADjB,cACbrB,EADa,SAGjB,EAAKuC,UAAS,SAAAwB,GAAS,MAAK,CAC1BzC,SAAS,GAAD,mBAAMyC,EAAUzC,UAAhB,CAA0BtB,QAJnB,kBAOZA,GAPY,2CAArB,kCAAAQ,KAAA,eAUA,EAAKwD,mBAAqB,WACxB,IAAIC,EAAW,EAAKhC,QAAQQ,IAAI,aACbwB,EAAWA,EAASC,MAAM,KAAO,IACvC3C,IAAb,+BAAAc,EAAA,MAAiB,WAAO8B,GAAP,SAAA9B,EAAA,sEAAyB,EAAKL,cAAcmC,GAA5C,mFAAjB,wDAGF,EAAK/C,cAAgB,SAACC,GACpB,EAAKkB,SAAS,CACZjB,SAAU,EAAKS,MAAMT,SAAS8C,QAAO,SAAApE,GAAa,OAAOA,EAAQiB,QAAUI,OAE7E,IACIgD,EADW,EAAKpC,QAAQQ,IAAI,YAAYyB,MAAM,KAClBE,QAAO,SAAAD,GAAa,OAAOA,IAAY9C,KACvE,EAAKY,QAAQU,IAAI,WAAY0B,EAAiBC,KAAK,OAGrD,EAAKN,qBA9BY,E,qDAiCT,IAAD,OACP,OACE,kBAAC,IAAD,CACEO,OAAK,EAACC,KAAM,IACZC,OACE,SAACC,GAAD,OAEI,yBAAKpE,UAAU,OACb,yBAAKA,UAAU,UAAf,wBACA,kBAAC,EAAD,CAAM0B,cAAe,EAAKA,gBAC1B,kBAAC,EAAD,CAAUV,SAAU,EAAKS,MAAMT,SAAUF,cAAe,EAAKA,wB,GA5C3DuD,IAAMzD,WCJxB0D,IAASH,OACP,kBAAC,IAAD,CAAQI,SAAUC,oBAChB,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.5c0bfcba.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Card extends Component {\n  profile = this.props;\n  score = this.profile.public_repos * 10 + this.profile.followers *5;\n  deleteCard = this.props.deleteCard;\n\n  render() {\n    return (\n      <div className=\"card\">\n        <a href={this.profile.html_url}><img src={this.profile.avatar_url} alt=\"avatar\" /></a>\n        <div className=\"card__info\">\n          <div className=\"card__name\">{this.profile.name}</div>\n          <div className=\"card__company\">{this.profile.company}</div>\n          <div className=\"card__bio\">{this.profile.bio}</div>\n        </div>\n        <div className=\"card__score\">{this.score}</div>\n        <div className=\"card__delete\" onClick={ () => this.deleteCard(this.profile.login)}>X</div>\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport Card from './Card'\n\nclass CardList extends Component {\n  deleteProfile = this.props.deleteProfile;\n\n  deleteCard = (userName) => {\n    this.props.deleteProfile(userName);\n  }\n\n  render() {\n    return (\n      <div className='card-list'>\n        {this.props.profiles.map(profile => <Card key={profile.id} deleteCard={this.deleteCard} {...profile} />)}\n      </div>\n    )\n  }\n}\n\nexport default CardList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  render() {\n    return (\n      <div className=\"alert\" style={this.props.error ? { opacity: 1 } : { opacity: 0 }}>\n        <i className=\"fas fa-exclamation-circle\"></i> {this.props.userName} account doesn't exist!\n      </div>\n    )\n  }\n}\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport Alert from './Alert'\nimport Cookies from 'universal-cookie';\n\nclass Form extends Component {\n  state = { userName: '', error: false };\n  addNewProfile = this.props.addNewProfile;\n  cookies = new Cookies();\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const profile = await this.addNewProfile(this.state.userName)\n    if (profile) {\n      this.setState({ userName: '', error: false });\n      let currentAccounts = this.cookies.get('accounts')\n      let newAccounts = currentAccounts ? currentAccounts + `,${profile.login}` : profile.login \n      this.cookies.set('accounts', newAccounts)\n    } else {\n      this.handleError();\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ userName: event.target.value, error: false })\n  };\n\n  handleError = () => {\n    this.setState({ userName: this.state.userName, error: true });\n  }\n\n  render() {\n    return (\n      <div className='form'>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type='text'\n            placeholder='GitHub username'\n            value={this.state.userName}\n            onChange={this.handleChange}\n            required\n          />\n          <button><i className='fas fa-plus'></i></button>\n          <Alert userName={this.state.userName} error={this.state.error} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Form;\n","const GithubProfileUrl = 'https://api.github.com/users/';\n\nconst GithubRequest = (username) => {\n  let githubRequest = new Request(`${GithubProfileUrl}${username}`);\n  \n  return(\n    fetch(githubRequest)\n      .then((response) => {\n        if (!response.ok) { return false; }\n        return response.json();\n      })\n  )\n}\n\nexport default GithubRequest;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport CardList from './components/CardList'\nimport Form from './components/Form'\nimport Cookies from 'universal-cookie';\nimport GithubRequest from './requests/GithubRequest'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.cookies = new Cookies();\n    this.state = { profiles: [] }\n\n    this.addNewProfile = async (userName) => {\n      const profile = await GithubRequest(userName);\n      if (profile) {\n        this.setState(prevState => ({\n          profiles: [...prevState.profiles, profile],\n        }));\n      };\n      return profile;\n    }\n\n    this.initializeProfiles = () => {\n      let accounts = this.cookies.get('accounts');\n      let accountsList = accounts ? accounts.split(',') : [];\n      accountsList.map(async (account) => await this.addNewProfile(account));\n    }\n\n    this.deleteProfile = (userName) => {\n      this.setState({\n        profiles: this.state.profiles.filter(profile => { return profile.login !== userName})\n      });\n      let accounts = this.cookies.get('accounts').split(',');\n      let filteredAccounts = accounts.filter(account => { return account !== userName });\n      this.cookies.set('accounts', filteredAccounts.join(','));\n    }\n\n    this.initializeProfiles();\n  }\n\n  render() {\n    return(\n      <Route\n        exact path={'/'}\n        render={\n          (routerProps) =>\n            (\n              <div className='App'>\n                <div className=\"header\">The GitHub Cards App</div>\n                <Form addNewProfile={this.addNewProfile} />\n                <CardList profiles={this.state.profiles} deleteProfile={this.deleteProfile} />\n              </div>\n            )\n        }\n      />\n      // <div className='App'>\n      //   <div className=\"header\">The GitHub Cards App</div>\n      //   <Form addNewProfile={this.addNewProfile}/>\n      //   <CardList profiles={this.state.profiles} deleteProfile={this.deleteProfile}/>\n      // </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}